# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    router.request_context.host: '%env(SITE_BASE_HOST)%'

    email: "contact@archers-caen.fr"
    phone: "+33 6 67 45 31 14"
    postal_address: "Avenue Albert 1er, 14000 Caen"

    recaptcha_public: "%env(GOOGLE_RECAPTCHA_PUBLIC)%"
    recaptcha_secret: "%env(GOOGLE_RECAPTCHA_SECRET)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $email: '%email%'
            $phone: '%phone%'
            $postalAddress: '%postal_address%'
            $env: '%kernel.environment%'
            $baseHost: '%router.request_context.scheme%://%router.request_context.host%'

    _instanceof:
        Doctrine\Bundle\DoctrineBundle\EventSubscriber\EventSubscriberInterface:
            tags: ['doctrine.event_subscriber']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Command\Cron\FftaArcherUpdateCommand:
        $fftaUsername: '%env(FFTA_USERNAME)%'
        $fftaPassword: '%env(FFTA_PASSWORD)%'

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
