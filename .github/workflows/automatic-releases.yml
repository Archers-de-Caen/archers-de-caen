name: Cr√©ation d'une release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: "üñ•Ô∏è Setup node"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3

      - name: Cache NPM packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: "üñ•Ô∏è Npm run scripts"
        run: |
          npm install
          npm run build

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - uses: actions/checkout@v3

      - name: Create Database
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: |
          mkdir -p data
          touch data/database.sqlite
          php bin/console doctrine:database:create --no-interaction
          php bin/console doctrine:schema:create --no-interaction

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: vendor/bin/phpunit --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist --testdox

  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    needs:
      - build
      - tests

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: "üñ•Ô∏è Cr√©ation de production.zip"
        uses: montudor/action-zip@v1
        with:
          args: zip -q -r production.zip assets config migrations public src templates tests translations vendor .env composer.json composer.lock package.json package-lock.json symfony.lock webpack.config.js bin/console tools

      - name: "‚≠ê Cr√©ation de la release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE.txt
            production.zip
