@use "sass:color";
@use "../variable";

.form-groups {
  color: variable.$color-grey;

  .form-group {
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: start;
    margin: 10px 0;
    width: 100%;

    &.--check {
      flex-direction: row-reverse;
      align-items: center;

      label {
        cursor: pointer;
      }

      input {
        margin-right: 10px;
      }
    }

    &.--btn {
      input[type="radio"], input[type="checkbox"] {
        display: none;
      }

      input[type="radio"]:checked + label, input[type="checkbox"]:checked + label {
        box-shadow: 0 0 0 3px variable.$color-yellow inset;
      }

      label {
        width: 100%;
        height: 100%;

        padding: 10px 20px;

        border-radius: variable.$border-radius-normal;
        border: 2px solid variable.$color-yellow;

        box-shadow: 0 0 0 0 variable.$color-yellow inset;
        transition: box-shadow .5s ease;

        text-align: center;

        cursor: pointer;
      }
    }

    &.--white {
      label {
        background-color: variable.$color-white;
      }
    }

    label {
      font-weight: bold;
    }

    input, textarea, select {
      border: 2px solid variable.$color-yellow;
      border-radius: variable.$border-radius-normal;
      margin: 5px 0;
      background-color: variable.$color-white;
      width: 100%;

      min-width: 200px;
      height: 50px;
      padding: 10px 20px;

      &[type="checkbox"], &[type="radio"] {
        min-width: unset;
        height: 25px;
        width: 25px;
        box-shadow: 0 0 0 0 variable.$color-yellow inset;
        padding: 10px;

        cursor: pointer;
        transition: box-shadow .5s ease;
      }

      &[type="radio"] {
        border-radius: 100%;

        &:checked {
          box-shadow: 0 0 0 6px variable.$color-yellow inset;
        }
      }

      &[type="checkbox"] {
        &:checked {
          box-shadow: 0 0 0 15px variable.$color-yellow inset;
          position: relative;

          &::before {
            content: 'âœ“';
            color: variable.$color-white;
            position: absolute;
            top: -2px;
            left: 4px;
            font-size: large;
            font-weight: bold;
          }
        }
      }

      &:disabled {
        border-color: color.adjust(variable.$color-grey, $lightness: 50%);
        cursor: not-allowed;
      }

      &:disabled + label {
        color: color.adjust(variable.$color-grey, $lightness: 50%);
        cursor: not-allowed;
      }
    }

    select {
      position: relative;
      cursor: pointer;
      display: block;
      appearance: auto;
      padding: 12px 15px;

      &::before {
        display: block;
        content: '';
        width: 10px;
        height: 10px;
        background: url('../../images/symbole/down-arrow.svg') no-repeat right;
        background-size: 100%;
        position: absolute;
        right: 0;
        top: 0;
      }

      &:active {
        //background-
      }
    }

    textarea {
      min-height: 150px;
    }

    &.-error {
      input, textarea {
        border-color: variable.$color-red;
        background-color: color.adjust(variable.$color-red, $lightness: 45%);
      }

      .error {
        display: block;
      }
    }

    .error {
      display: none;
      color: variable.$color-red;
    }
  }
}

// for auto complete form
.ts-wrapper {
  width: 100%;

  border-radius: variable.$border-radius-normal !important;
  border: 2px solid variable.$color-yellow !important;

  .ts-control {
    border-color: inherit !important;
    box-shadow: inherit !important;
    background-color: inherit !important;
    background-image: inherit !important;

    input {
      border: 2px solid variable.$color-yellow !important;
      border-radius: variable.$border-radius-normal !important;
      padding: 10px 20px !important;
      background-color: variable.$color-white !important;
      color: variable.$color-grey !important;
      margin-top: 1rem !important;

      &::placeholder {
        color: variable.$color-grey !important;
      }
    }

    .ts-clear {
      color: variable.$color-grey !important;
    }
  }

  .ts-dropdown {
    border-bottom-left-radius: variable.$border-radius-normal !important;
    border-bottom-right-radius: variable.$border-radius-normal !important;
    border-bottom: 2px solid variable.$color-yellow !important;
    background-color: variable.$color-white !important;

    .option {
      padding: 10px 20px;
      border-bottom: 1px solid variable.$color-yellow;

      &:last-child {
        border-bottom: none;
      }

      &:hover {
        background-color: variable.$color-yellow;
        color: variable.$color-white;
      }
    }
  }
}

// module d'upload de fichier
.vich-file {
  width: 100%;
}
