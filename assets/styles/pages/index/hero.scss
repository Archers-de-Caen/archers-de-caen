@use "sass:map";
@use "../../variable";

.index-page {
  .hero-container {
    background-color: variable.$color-yellow;

    .hero {
      width: 80%;
      height: 700px;
      margin: auto;

      display: flex;
      justify-content: space-between;

      @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
        flex-direction: column;
        height: 815px;
      }

      .title, .thumbnails {
        grid-row-start: 1;
        grid-row-end: 2;
        place-self: center;

        height: 500px;
      }

      .title {
        grid-column-start: 1;
        grid-column-end: 2;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-evenly;
        margin-right: 35px;

        color: variable.$color-white;
        text-transform: uppercase;
        text-align: center;

        @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
          margin-top: 15px;
          margin-right: 0;
        }

        h1, h2 {
          color: variable.$color-grey
        }

        h1 {
          font-size: 4rem;

          @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
            font-size: xxx-large;
          }
        }

        h2 {
          font-size: xxx-large;

          @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
            margin-top: 15px;
            font-size: x-large;

            br {
              display: none;
            }
          }
        }
      }

      .thumbnails-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: end;

        @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
          margin: 15px 0;
        }

        .thumbnails {
          display: grid;
          grid-template-rows: repeat(2, 250px);
          grid-template-columns: repeat(3, 230px);
          column-gap: 15px;
          row-gap: 15px;
          height: fit-content;

          @media (max-width: map.get(variable.$grid-breakpoints, lg)) {
            grid-template-columns: repeat(3, calc((90vw - 75px) / 3)) !important;
          }

          @media (max-width: map.get(variable.$grid-breakpoints, sm)) {
            grid-template-rows: repeat(3, calc(500px / 3));
          }

          @media (min-width: map.get(variable.$grid-breakpoints, xs)) and (max-width: map.get(variable.$grid-breakpoints, sm)) {
            grid-template-columns: repeat(2, calc((80vw - 75px) / 2)) !important;
          }

          @media (max-width: map.get(variable.$grid-breakpoints, xs)) {
            grid-template-columns: repeat(2, calc((100vw - 75px) / 2)) !important;
          }

          .thumbnail-with-text {
            width: unset;
            height: unset;
            display: unset;
            margin: unset;

            img {
              object-fit: cover;
            }

            &:nth-child(1) {
              grid-column-start: 1;
              grid-column-end: 2;
              grid-row-start: 1;
              grid-row-end: 3;
            }

            &:nth-child(2) {
              grid-column-start: 2;
              grid-column-end: 4;
              grid-row-start: 1;
              grid-row-end: 2;
            }

            &:nth-child(3) {
              grid-column-start: 2;
              grid-column-end: 3;
              grid-row-start: 2;
              grid-row-end: 3;
            }

            &:nth-child(4) {
              grid-column-start: 3;
              grid-column-end: 4;
              grid-row-start: 2;
              grid-row-end: 3;
            }

            @media (max-width: map.get(variable.$grid-breakpoints, sm)) {
              &:nth-child(1) {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 1;
                grid-row-end: 2;
              }

              &:nth-child(2) {
                grid-column-start: 1;
                grid-column-end: 2;
                grid-row-start: 2;
                grid-row-end: 3;
              }

              &:nth-child(3) {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 2;
                grid-row-end: 3;
              }

              &:nth-child(4) {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 3;
                grid-row-end: 4;
              }
            }
          }
        }

        .show-all-actualities {
          display: flex;
          align-items: center;
          margin-top: 15px;
          color: variable.$color-grey;

          &:hover {
            text-decoration: underline;
          }
        }
      }
    }
  }
}
