{% extends 'landing/base.html.twig' %}

{% block title %}Formulaire d'inscription {{ competitionRegister }}{% endblock %}

{% block main %}
    <div class="page-content">
        {{ include('landing/competition-registers/_parts/mandate.html.twig') }}
        {% set url = path(
            constant('App\\Http\\Landing\\Controller\\CompetitionRegisterController::ROUTE_LANDING_COMPETITION_REGISTER_VALIDATED'),
            { slug: competitionRegister.slug, licenseNumber: '__licenseNumber__' }
        ) %}
        <p>
            <a href="{{ url }}" id="see-recap">
                Déjà inscrit ? Voir le récapitulatif de votre inscription ou payer
            </a>
        </p>

        {{ form_start(form, {attr: {class: 'mt-4'}}) }}
            {{ form_errors(form) }}

            {{ form_row(form._token) }}

            <div class="toggleables">
                <div class="toggleable --active">
                    <div class="toggleable-summary">
                        <h4>Nouvelle inscription</h4>
                        <span></span>
                    </div>
                    <div class="toggleable-content">
                        {{ form_row(form.licenseNumber) }}

                        <div class="mt-2">
                            <div class="flex jc-space-between">
                                {{ form_row(form.firstName) }}
                                {{ form_row(form.lastName) }}
                            </div>

                            <div class="form-groups">
                                <div class="form-group">
                                    {{ form_label(form.gender) }}
                                    <div class="flex jc-space-between w-100">
                                        {% for gender in form.gender %}
                                            {{ form_row(gender, { row_attr: { class: '--btn' } }) }}
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>

                            <div class="flex jc-space-between">
                                {{ form_row(form.email) }}
                                {{ form_row(form.phone) }}
                            </div>

                            {{ form_row(form.category) }}

                            <div class="form-groups">
                                <div class="form-group">
                                    {{ form_label(form.weapon) }}
                                    <div class="flex jc-space-between w-100 --gap-2">
                                        {% for weapon in form.weapon %}
                                            {{ form_row(weapon, { row_attr: { class: '--btn' } }) }}
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>

                            <div class="">
                                {{ form_row(form.club) }}
                            </div>

                            {{ form_row(form.wheelchair, { row_attr: { class: '--check' } }) }}
                            {{ form_row(form.firstYear, { row_attr: { class: '--check' } }) }}
                        </div>

                        <div class="form-groups mt-4">
                            <h3>Sélectionner le ou les départs que vous voulez faire</h3>

                            {% for departure in competitionRegister.departures %}
                                <div class="form-group --check --btn {% if not loop.first %}mt-4{% endif %} departures">
                                    {% set dateId = departure.date|date('Y-m-d-H-i') %}

                                    <input
                                        type="checkbox"
                                        id="{{ dateId }}"
                                        name="date"
                                        {% if form[departure.id ~ '-targets'].vars.value %}checked{% endif%}
                                    />
                                    <label for="{{ dateId }}">
                                        Départ du {{ departure.date|date('d/m/Y à G\\hi') }}
                                        ({{ departure.registration }} inscrits / {{ departure.maxRegistration }})
                                    </label>
                                </div>

                                <div class="form-groups targets">
                                    {% for target in form[departure.id ~ '-targets'] %}
                                        {{ form_row(target, { row_attr: { class: '--btn' } }) }}
                                    {% endfor %}

                                    {{ form_errors(form[departure.id ~ '-targets']) }}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>

            <button class="btn w-100 mt-2 text-center" type="button">
                Ajouter un archer
            </button>

            <div class="form-groups mt-4">
                <h3>Information complémentaire</h3>

                {{ form_row(form.additionalInformation) }}
            </div>

            <div id="submit-container" class="mt-2 flex jc-end">
                {{ form_row(form.submit, { label: "Suivant" }) }}
            </div>

        {{ form_end(form, {'render_rest': false}) }}
    </div>
{% endblock %}

{% block javascript_footer %}
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            function setArcherInputValue(container, selector, value) {
                const input = container.querySelector(archerFormPrefix + selector)

                if (input) {
                    input.value = value
                }
            }

            function handleLicenseInput(licenseNumber) {
                const container = licenseNumber.closest('.toggleable-content')

                if (licenseNumber.value && licenseNumber.value.match(/\d{6}[a-zA-Z]/g)) {
                    fetch('/api/competition-registers/archers/' + licenseNumber.value)
                        .then((response) => {
                            if (200 === response.status) {
                                return response.json()
                            }
                        })
                        .then((body) => {
                            if (body) {
                                setArcherInputValue(container, 'firstName', body.firstName)
                                setArcherInputValue(container, 'lastName', body.lastName)
                                setArcherInputValue(container, 'club', body.club)
                                setArcherInputValue(container, 'email', body.email)
                                setArcherInputValue(container, 'phone', body.phone)

                                const genderInput = document.querySelector(`input[name="competition_register_departure_target_archer_form[gender]"][value="${body.gender}"]`)
                                if (genderInput) {
                                    genderInput.checked = true
                                }

                                const categorySelect = document.querySelector(`select[name="competition_register_departure_target_archer_form[category]"]`)
                                if (categorySelect) {
                                    const categoryOption = categorySelect.querySelector(`[value="${body.category}"]`)

                                    categorySelect.value = categoryOption.value
                                }
                            } else {
                                setArcherInputValue(container, 'firstName', null)
                                setArcherInputValue(container, 'lastName', null)
                                setArcherInputValue(container, 'club', null)
                                setArcherInputValue(container, 'category', null)
                            }
                        })
                        .finally(() => {
                            show(submitContainer, 'flex')
                        })
                }
            }

            function handleGenderInput(target) {
                document.querySelectorAll('option[data-gender]').forEach((option) => {
                    if (target.getAttribute('data-gender') === option.getAttribute('data-gender')) {
                        show(option)
                    } else {
                        hide(option)
                    }
                })
            }

            const submitContainer = document.querySelector('#submit-container')

            const archerFormPrefix = '#competition_register_departure_target_archer_form_'
            const licenseInput = document.querySelector(archerFormPrefix + 'licenseNumber')
            const genderInputs = document.querySelectorAll('input[name="competition_register_departure_target_archer_form[gender]"]')

            let typingTimer
            const doneTypingInterval = 500

            hide(submitContainer)

            licenseInput.addEventListener('input', (e) => {
                const target = e.currentTarget

                clearTimeout(typingTimer)

                typingTimer = setTimeout(() => {
                    handleLicenseInput(target)
                }, doneTypingInterval)
            })

            genderInputs.forEach((genderInput) => {
                genderInput.addEventListener('input', (e) => {
                    const target = e.currentTarget

                    handleGenderInput(target)
                })
            })

            document.querySelectorAll('option[data-gender]').forEach((option) => {
                hide(option)

                option.textContent = option.textContent.replace(/Homme|Femme/, '')
            })

            if (licenseInput.value) {
                show(submitContainer, 'flex')
            }

            document.querySelectorAll('.targets').forEach(target => {
                hide(target)
            })

            document.querySelectorAll('input[name=date]').forEach(input => {
                if (input.checked) {
                    show(input.closest('.departures').nextElementSibling)
                }

                input.addEventListener('change', (e) => {
                    const target = e.currentTarget
                    const targets = target.closest('.departures').nextElementSibling

                    if (target.checked) {
                        show(targets)
                    } else {
                        hide(targets)

                        targets.querySelectorAll('input').forEach((radio) => {
                            radio.checked = false
                        })
                    }
                })
            })

            document.querySelector('#see-recap').addEventListener('click', (e) => {
                e.preventDefault()

                const href = e.currentTarget.href

                Swal.fire({
                    title: 'Numero de licence',
                    input: 'text',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#FDD20E',
                    inputValidator(inputValue) {
                        if (!inputValue) {
                            return "Vous devez fournir votre numéro de licence"
                        }

                        if (!inputValue.match('[0-9]{6}[a-zA-Z]')) {
                            return "Votre numéro de licence doit être au format 123456A"
                        }
                    },
                    preConfirm(inputValue) {
                        if (!inputValue) {
                            return
                        }

                        document.location.href = href.replace('__licenseNumber__', inputValue)
                    }
                })
            })
        })
    </script>
{% endblock javascript_footer %}
